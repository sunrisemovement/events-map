# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: true
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/aws-eventstream/all/aws-eventstream.rbi
#
# aws-eventstream-1.0.3

module Aws
end
module Aws::EventStream
end
class Aws::EventStream::Decoder
  def context(io, total_len, headers_len, prelude_buffer); end
  def decode(io, &block); end
  def decode_chunk(chunk = nil); end
  def decode_io(io); end
  def decode_message(io); end
  def extract_headers(buffer); end
  def extract_payload(buffer); end
  def initialize(options = nil); end
  def message_buffer; end
  def payload_stringio(buffer); end
  def payload_tempfile(buffer); end
  def prelude(io); end
  def unpack_uint16(buffer); end
  def unpack_uint32(buffer); end
  def unpack_uint8(buffer); end
  include Enumerable
end
class Aws::EventStream::Encoder
  def encode(message, io = nil); end
  def encode_headers(msg); end
  def encode_message(message); end
  def pack_uint16(val); end
  def pack_uint32(val); end
  def pack_uint8(val); end
  def prelude(total_len, headers_len); end
end
class Aws::EventStream::BytesBuffer
  def <<(bytes); end
  def bytesize; end
  def clear!; end
  def eof?; end
  def initialize(data); end
  def read(len = nil, offset = nil); end
  def readbyte; end
  def rewind; end
  def tell; end
  def write(bytes); end
end
class Aws::EventStream::Message
  def headers; end
  def initialize(options); end
  def payload; end
end
class Aws::EventStream::HeaderValue
  def format_timestamp(value); end
  def format_uuid(value); end
  def format_value(value); end
  def initialize(options); end
  def type; end
  def value; end
end
module Aws::EventStream::Types
  def self.pattern; end
  def self.types; end
end
module Aws::EventStream::Errors
end
class Aws::EventStream::Errors::ReadBytesExceedLengthError < RuntimeError
  def initialize(target_byte, total_len); end
end
class Aws::EventStream::Errors::IncompleteMessageError < RuntimeError
  def initialize(*args); end
end
class Aws::EventStream::Errors::PreludeChecksumError < RuntimeError
  def initialize(*args); end
end
class Aws::EventStream::Errors::MessageChecksumError < RuntimeError
  def initialize(*args); end
end
class Aws::EventStream::Errors::EventPayloadLengthExceedError < RuntimeError
  def initialize(*args); end
end
class Aws::EventStream::Errors::EventHeadersLengthExceedError < RuntimeError
  def initialize(*args); end
end
